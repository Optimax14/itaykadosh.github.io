name: Deploy Vite site to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Vite app directory
        id: detect
        run: |
            set -euo pipefail

            if [[ -f "package.json" ]] && compgen -G "vite.config.*" > /dev/null; then
              app_dir="."
              out_dir="dist"
            elif [[ -f "client/package.json" ]] && compgen -G "client/vite.config.*" > /dev/null; then
              app_dir="client"
              out_dir="client/dist"
            else
              echo "Unable to locate a Vite app directory." >&2
              exit 1
            fi

            if [[ "$app_dir" == "." ]]; then
              lockfile="package-lock.json"
            else
              lockfile="$app_dir/package-lock.json"
            fi

            if [[ ! -f "$lockfile" ]]; then
              lockfile=""
            fi

            {
              echo "app-dir=$app_dir"
              echo "out-dir=$out_dir"
              echo "lockfile=$lockfile"
            } >>"$GITHUB_OUTPUT"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ steps.detect.outputs.lockfile }}

      - name: Install dependencies
        working-directory: ${{ steps.detect.outputs.app-dir }}
        run: npm install

      - name: Build site
        working-directory: ${{ steps.detect.outputs.app-dir }}
        run: npm run build

      - name: Create SPA fallback
        id: spa
        run: |
          set -euo pipefail

          out_dir="${{ steps.detect.outputs.out-dir }}"

          if [[ ! -f "$out_dir/index.html" ]] && [[ -f "$out_dir/public/index.html" ]]; then
            out_dir="$out_dir/public"
          fi

          if [[ ! -f "$out_dir/index.html" ]]; then
            echo "index.html not found in '$out_dir'" >&2
            exit 1
          fi

          cp "$out_dir/index.html" "$out_dir/404.html"
          echo "artifact-path=$out_dir" >>"$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./${{ steps.spa.outputs.artifact-path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
