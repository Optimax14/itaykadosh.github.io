name: Deploy Vite site to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Vite app directory
        id: detect
        run: |
          if [ -f "pnpm-lock.yaml" ] && [ -f "vite.config.ts" ]; then
            echo "app-dir=." >>"$GITHUB_OUTPUT"
          elif [ -f "client/pnpm-lock.yaml" ] && [ -f "client/vite.config.ts" ]; then
            echo "app-dir=client" >>"$GITHUB_OUTPUT"
          elif [ -d "client" ] && [ -f "client/index.html" ]; then
            echo "app-dir=client" >>"$GITHUB_OUTPUT"
          else
            echo "Unable to locate the Vite app directory" >&2
            exit 1
          fi

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: ${{ steps.detect.outputs.app-dir }}/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ${{ steps.detect.outputs.app-dir }}
        run: pnpm install

      - name: Build site
        working-directory: ${{ steps.detect.outputs.app-dir }}
        run: pnpm build

      - name: Prepare Pages artifact
        id: prepare
        working-directory: ${{ steps.detect.outputs.app-dir }}
        env:
          APP_DIR: ${{ steps.detect.outputs.app-dir }}
        run: |
          set -euo pipefail

          if [ -d dist/public ]; then
            mv dist/public dist-tmp
            rm -rf dist
            mv dist-tmp dist
          fi

          if [ -f dist/index.html ]; then
            cp dist/index.html dist/404.html
          else
            echo "index.html not found in dist/" >&2
            exit 1
          fi

          if [ "$APP_DIR" = "." ]; then
            echo "upload_path=dist" >>"$GITHUB_OUTPUT"
          else
            echo "upload_path=$APP_DIR/dist" >>"$GITHUB_OUTPUT"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.prepare.outputs.upload_path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
